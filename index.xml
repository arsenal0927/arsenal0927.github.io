<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arsenal&#39;s Blog</title>
    <link>https://arsenal0927.github.io/</link>
    <description>Recent content on Arsenal&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Apr 2020 17:11:05 +0800</lastBuildDate>
    
	<atom:link href="https://arsenal0927.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ubuntu16.04_4bit安装docker以及docker-compose</title>
      <link>https://arsenal0927.github.io/files/ubuntu16.04_64bit%E5%AE%89%E8%A3%85docker%E4%BB%A5%E5%8F%8Adocker-compose/</link>
      <pubDate>Mon, 20 Apr 2020 17:11:05 +0800</pubDate>
      
      <guid>https://arsenal0927.github.io/files/ubuntu16.04_64bit%E5%AE%89%E8%A3%85docker%E4%BB%A5%E5%8F%8Adocker-compose/</guid>
      <description>ubuntu16.04_4bit安装docker以及docker-compose docker以及docker-compose在ubuntu中的安装也是基于命令行安装的。
一、安装docker  安装教程：https://docs.docker.com/install/linux/docker-ce/ubuntu/
 1. 卸载旧版本的docker(如果有) sudo apt-get remove docker docker-engine docker.io containerd runc  2. 环境配置  更新apt包目录  sudo apt-get update   安装包以允许apt能够使用https上的仓库  sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ software-properties-common   添加docker官方的GPG键  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  通过后八位验证键值为9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88
sudo apt-key fingerprint 0EBFCD88 # print值 pub rsa4096 2017-02-22 [SCEA] 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88 uid [ unknown] Docker Release (CE deb) &amp;lt;docker@docker.</description>
    </item>
    
    <item>
      <title>博客优化</title>
      <link>https://arsenal0927.github.io/files/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/</link>
      <pubDate>Mon, 20 Apr 2020 15:07:28 +0800</pubDate>
      
      <guid>https://arsenal0927.github.io/files/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/</guid>
      <description>博客优化 怎么说呢，博客站点什么基本是弄好了，但是总体上还是比较粗糙的，下面是一些待优化的点。
1.分类 现在文章数量还是个位数，往后多了起来也肯定不会有这个耐性一篇篇分类,所以博客分类这个功能需要尽快添加。
大致就这几类：生活、读书、物联网、web相关。
2.左侧简介优化 文字方面基本OK的，下方图片链接看看能不能修改成文字类型的链接，感觉会比较美观。
3.标签图标 打开后头部小标签和书签栏中的都是一个非常丑的标签，尝试把它替换成自己喜欢的内容。
4.媒体文件 不知道是那边出错了，添加的图片都不能正常显示。。。纯文字的博客感觉少了很多内容。
以上是近期需要优化的内容，就这样，一篇简单用来凑数的博客就完成了=。=</description>
    </item>
    
    <item>
      <title>树莓派的使用</title>
      <link>https://arsenal0927.github.io/files/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 17 Apr 2020 09:50:20 +0800</pubDate>
      
      <guid>https://arsenal0927.github.io/files/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>树莓派3的系统安装  本文主要介绍如何为一个新的树莓派3搭建环境，以及在开发中部分工具的配置。
 树莓派3的系统是装在SD卡中的，具体分为两种情况，新的sd卡和存在系统的sd卡重装系统。 在windows操作系统下进行操作，使用的工具是*Win32DiskImager*，系统的版本：*2016-05-27-raspbian-jessie*，命令行工具：cmder
镜像烧录 新的sd卡安装
 sd卡插入读卡器，然后插入电脑，等待电脑识别到sd卡。
 打开*Win32DiskImager*，选择sd卡对应的盘，载入系统镜像，点击write，等待写入成功。
 结束。
  存在系统的sd卡 - 重装存在系统的sd卡需要使用 bootsector.img 将sd卡还原，
-&amp;gt; 注意：这里直接格式化是不能将sd卡还原的。sd卡插入读卡器，然后插入电脑，等待电脑识别到sd卡。   打开*Win32DiskImager*，选择sd卡对应的盘，载入 bootsector.img，点击write，等待写入成功。
 退出*Win32DiskImager*，格式化sd卡，将单元大小分配为4096字节，等待格式化成功。
 打开*Win32DiskImager*，选择sd卡对应的盘，载入系统镜像，点击write，等待写入成功。
 结束。
   注意： 系统镜像下载：https://www.raspberrypi.org/downloads/选择自己喜欢的版本就好。*bootsector.img*下载：http://www.alexpage.de/download/usbit/bootsector.img。当出现数据冗余的错误时，可以尝试将sd卡还原后，在格式化的时候将单元大小分配为4096字节尝试下。
 登陆系统  烧入树莓派3的系统的默认用户名密码是：pi + raspberry。
 使用网络连接树莓派网口，然后使用扫描IP的软件获得树莓派的IP地址。
 使用ssh pi@ip_address的命令进入系统。
 结束。
   注意： 这里使用的扫描IP的软件是fing,只有mac和ios系统有，安卓或者其他系统使用自己喜欢的软件即可。系统镜像在2016-11-25的版本之后需要先连接屏幕登陆，在raspi-config中将ssh打开才可以使用以上方法登陆。
 开发环境配置 换国内源
#sudo vi /etc/apt/sources.list 使内容变为
deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib deb-src http://mirrors.</description>
    </item>
    
    <item>
      <title>使用Hugo搭建博客的细节</title>
      <link>https://arsenal0927.github.io/files/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%BB%86%E8%8A%82/</link>
      <pubDate>Wed, 15 Apr 2020 09:57:56 +0800</pubDate>
      
      <guid>https://arsenal0927.github.io/files/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%BB%86%E8%8A%82/</guid>
      <description>使用Hugo完成博客的搭建以及发布  记性不太好，经常会忘记博客创建、更新、发布等命令，干脆就写下来免得自己又忘记了
 环境
工具：macbookpro 2017、iTerm2 开发环境：python3.7  1.安装 brew install hugo
2.创建博客 hugo new site (myblognme) # 例如：hugo new site myblog  3.下载并设置主题 以hugo-theme-m10c为例
cd myblog //进入博客根目录 git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c  修改config.toml配置文件
theme = &amp;quot;m10c&amp;quot;  4.本地启动个人博客 hugo server -t m10c --buildDrafts  可从http://localhost:1313/访问本地博客
5.创建一篇新的博客 hugo new [path/filename] # 例如：hugo new files/first-blog.md  命令执行后会在myblog/content路径下创建一个files 文件夹，创建的blog文件就保存在其中。
6.将个人博客部署到远程服务器  在GitHub创建仓库，创建的项目名字一定是昵称的小写，比如昵称为：arsenal0927，那么项目名称就为：arsenal0927。
 发布博客
hugo --theme=m10c --baseUrl=&amp;quot;https://arsenal0927.github.io/&amp;quot; --buildDrafts  baseUrl是博客的地址，而arsnel0927就是创建的项目名。执行后根目录下回多出一个public文件夹，编译好的博客的内容就在里面。</description>
    </item>
    
    <item>
      <title>Aboutme</title>
      <link>https://arsenal0927.github.io/files/aboutme/</link>
      <pubDate>Mon, 13 Apr 2020 17:06:12 +0800</pubDate>
      
      <guid>https://arsenal0927.github.io/files/aboutme/</guid>
      <description>使用hugo搭建的博客，托管在GitHub。
参照的视频为：手把手教你从0开始搭建自己的个人博客
以及文章：使用Hugo搭建自己的个人博客网站
使用的主题为：hugo-theme-m10c，使用官方给出的命令就可以安装，无繁琐配置需求。
参考资料 官网：https://gohugo.io/
文档：https://gohugo.io/documentation/</description>
    </item>
    
  </channel>
</rss>